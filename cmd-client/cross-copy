#!/bin/bash

SERVER=http://www.cross-copy.net
QUIET=false 
FETCH_RECENT_DATA=false
PARAMETERS="?"
VERBOSE=false
JSON=''

while getopts ":lqrvjs:d:k:" opt; do
  case $opt in
    q)
      QUIET=true
      ;;
    k)
      PARAMETERS="${PARAMETERS}keep_for=${OPTARG}&"
      ;;
    r)
      FETCH_RECENT_DATA=true
      ;;
    s)
      PARAMETERS="${PARAMETERS}since=${OPTARG}&"
      ;;
    j)
      JSON=".json"
      ;;
    v)
      VERBOSE=true
      ;;
    d)
      PARAMETERS="${PARAMETERS}device_id=${OPTARG}&"
      ;;
    l)
      SERVER=http://localhost:8080
      $QUIET || echo "using localhost instead of cross-copy.net"
      ;;
    \?)
      echo "Invalid option: -$OPTARG" >&2
      exit 1
      ;;
  esac
  shift $((OPTIND-1)); OPTIND=1
done

if [ $# == 1 ]; then
  if [ $FETCH_RECENT_DATA == true ]; then
    CMD="curl -s $SERVER/api/$1/recent-data.json"
    $VERBOSE && echo $CMD    
    RECENT=`$CMD`
    echo $RECENT
    exit 0
  fi

  $QUIET || echo "waiting for pastes with secret '$1' on $SERVER"
  CMD="curl -s $SERVER/api/$1$JSON$PARAMETERS"
  $VERBOSE && echo $CMD    
  PASTE=`$CMD`
  [[ $PASTE == /api/${1}* ]] && PASTE=${SERVER}$PASTE  # complete internal urls
  echo $PASTE

elif [ $# == 2 ]; then
  curl -X PUT -s -d "$2" $SERVER/api/$1$JSON$PARAMETERS
else
  echo "wrong number of arguments. usage:"
  echo "   $ cross-copy secred-code              # to receive data"
  echo "   $ cross-copy secred-code 'some data'  # to send data"
fi
